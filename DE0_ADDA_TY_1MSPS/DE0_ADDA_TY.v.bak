//	ADDA DualBand Generation Program
//	On Terasic DE0 Platform
// (C) 2012 TYLEE @ RFVLSI LAB, NCTU
// All Rights Reserved.

module DE0_ADDA_TY(
	input			CLOCK_50,	// Clock 50 MHz, PIN R8
	output		[7:0] LED,	// LED
	input 		[1:0] KEY,	// KEY
	input			[3:0]	SW, 	// DIP Switches

	inout			[33:0]GPIO_0_D,	//	GPIO 0 
	inout 		[1:0]	GPIO_0_D_IN,// GPIO 0 CLK
	inout			[33:0]GPIO_1_D,	// GPIO 1
	inout 		[1:0]	GPIO_1_D_IN	// GPIO 1 CLK
);

assign	LED		=	8'b11111111;	//	Turn on all display

assign GPIO_1_D_IN = 2'bzz;
assign GPIO_0_D_IN = 2'bzz;
//wire					CLK_36;
wire					CLK_125;

assign	{GPIO_1_D[17],GPIO_1_D[19],GPIO_1_D[20],GPIO_1_D[22],GPIO_1_D[21],GPIO_1_D[23],GPIO_1_D[25],GPIO_1_D[27],
         GPIO_1_D[24],GPIO_1_D[26],GPIO_1_D[29],GPIO_1_D[31],GPIO_1_D[28],GPIO_1_D[30]} = sin_out; //B

assign	{GPIO_1_D[0],GPIO_1_D[1],GPIO_1_D[2],GPIO_1_D[4],GPIO_1_D[3],GPIO_1_D[5],GPIO_1_D[6],GPIO_1_D[8],
         GPIO_1_D[7],GPIO_1_D[9],GPIO_1_D[10],GPIO_1_D[12],GPIO_1_D[11],GPIO_1_D[13]} = cos_out; //A

assign	GPIO_0_D[33:0] = GPIO_1_D[33:0];


assign  GPIO_1_D[33] = 1; //Mode Select. 1 = dual port, 0 = interleaved.

assign  GPIO_1_D[16] = CLK_125; //PLL Clock to DAC_B
assign  GPIO_1_D[14] = CLK_125; //PLL Clock to DAC_A

assign  GPIO_1_D[32] = CLK_125; //Input write signal for PORT B
assign  GPIO_1_D[15] = CLK_125; //Input write signal for PORT A

wire    [31:0]	phasinc1;
wire    [31:0]	phasinc2;

wire    g = 0;
wire    v = 1;

assign  phasinc1 = {g,g,g,g,g,g,g,g,g,g,g,g,g,g,g,g,g,g,g,g,g,g,g,g,g,g,g,g,g,g,g,g};
assign  phasinc2 = {g,v,g,g,g,g,g,g,g,g,g,g,g,g,g,g,g,g,g,g,g,g,g,g,g,g,g,g,g,g,g,g};

wire  	[13:0]	cos_out;
wire  	[13:0]	sin_out;


sine10	sin1   (	//	Sine 50 MHz by MagaCore IP, Multiplier Based Signal Generation
					  .clk		(CLK_125),
					  .reset_n  (v),
					  .clken    (v),
					  .phi_inc_i(phasinc1),
					  .fsin_o   (sin_out),
					  .fcos_o   (cos_out),
					  .out_valid(ovalid));



pll  pll_100    (
					  .inclk0(CLOCK_50),		
					  .c0    (CLK_125)
);

endmodule
