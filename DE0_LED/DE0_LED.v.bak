//	ADDA DualBand Generation Program
//	On Terasic DE0 Platform
// (C) 2012 TYLEE @ RFVLSI LAB, NCTU
// All Rights Reserved.

module DE0_LED(
	input			CLOCK_50,	// Clock 50 MHz, PIN R8
	output		[7:0] LED,	// LED
	input 		[1:0] KEY,	// KEY
	input			[3:0]	SW, 	// DIP Switches

	inout			[33:0]GPIO_0_D,	//	GPIO 0 
	input 		[1:0]	GPIO_0_D_IN,// GPIO 0 CLK
	inout			[33:0]GPIO_1_D,	// GPIO 1
	input 		[1:0]	GPIO_1_D_IN	// GPIO 1 CLK
);

assign	LED		=	8'b1;	//	Turn on all display


assign	DRAM_DQ		=	16'hzzzz;	//	All inout port turn to tri-state
assign	I2C_SDAT	   =	1'bz;			//	All inout port turn to tri-state
assign	GPIO_0_D		=	34'bz;		//	All inout port turn to tri-state
assign	GPIO_1_D		=	34'bz;		//	All inout port turn to tri-state

wire					CLK_65;
wire					CLK_125;

assign	{GPIO_0_D[17],GPIO_0_D[19],GPIO_0_D[20],GPIO_0_D[22],GPIO_0_D[21],GPIO_0_D[23],GPIO_0_D[27],GPIO_0_D[29],
         GPIO_0_D[24],GPIO_0_D[26],GPIO_0_D[29],GPIO_0_D[31],GPIO_0_D[28],GPIO_0_D[30]} = comb; //B

assign	{GPIO_0_D[0],GPIO_0_D[1],GPIO_0_D[2],GPIO_0_D[4],GPIO_0_D[3],GPIO_0_D[5],GPIO_0_D[6],GPIO_0_D[8],
         GPIO_0_D[7],GPIO_0_D[9],GPIO_0_D[10],GPIO_0_D[12],GPIO_0_D[11],GPIO_0_D[13]} = comb; //A


assign  GPIO_0_D[33] = 1; //Mode Select. 1 = dual port, 0 = interleaved.

assign  GPIO_0_D[16] = CLK_125; //PLL Clock to DAC_B
assign  GPIO_0_D[14] = CLK_125; //PLL Clock to DAC_A

assign  GPIO_0_D[32] = CLK_125; //Input write signal for PORT B
assign  GPIO_0_D[15] = CLK_125; //Input write signal for PORT A

wire    [31:0]	phasinc1;
wire    [31:0]	phasinc2;

wire    g = 0;
wire    v = 1;

assign  phasinc1 = {g,g,g,g,v,v,g,g,v,v,g,g,v,v,g,g,v,v,g,g,v,v,g,g,v,v,g,g,v,v,g,v};
assign  phasinc2 = {g,v,g,g,g,g,g,g,g,g,g,g,g,g,g,g,g,g,g,g,g,g,g,g,g,g,g,g,g,g,g,g};

wire  	[13:0]	sin10_out;
wire  	[13:0]	sin_out;


sine50	sin1   (	//	Sine 50 MHz by MagaCore IP, Multiplier Based Signal Generation
					  .clk		(CLK_125),
					  .reset_n  (v),
					  .clken    (v),
					  .phi_inc_i(phasinc1),
					  .fsin_o   (sin_out),
					  .out_valid(ovalid));

sine50	sin2   (	//	Sine 50 MHz by MagaCore IP, Multiplier Based Signal Generation
					  .clk      (CLK_125),
					  .reset_n  (v),
					  .clken    (v),
					  .phi_inc_i(phasinc2),
					  .fsin_o	(sin10_out),
					  .out_valid(ovalid));

pll  pll_100    (
					  .inclk0(CLOCK_50),		
					  .areset(g),
					  .c0    (CLK_125),
					  .c1    (CLK_65));


lpm_add lpm     (	//	Superposition
                 .clock (CLK_125),
					  .dataa ({g,~sin_out[12],sin_out[11:0]}),
					  .datab ({g,~sin10_out[12],sin10_out[11:0]}),
					  .result(comb));


endmodule
